name: Build & Deploy to Azure App Service

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  LOCATION: eastus
  ENVIRONMENT: dev
  PROJECT_NAME: dotnet9api
  PLAN_SKU: S1
  DOTNET_VERSION: 9.0.x
  DOTNET_RUNTIME: 9.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore → Build → Test
      run: |
        dotnet restore HelloApi
        dotnet build HelloApi -c Release --no-restore
        dotnet test HelloApi --no-build -c Release || echo "No tests found, skipping..."

    - name: Publish artifact
      run: |
        dotnet publish HelloApi -c Release -o output
        cd output
        zip -r ../app.zip .
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: app.zip

  infra:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.7.5

    - name: Terraform Init → Plan → Apply
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: |
        cd infra
        terraform init -input=false
        terraform plan \
          -var "subscription_id=${ARM_SUBSCRIPTION_ID}" \
          -var "tenant_id=${ARM_TENANT_ID}" \
          -var "location=${{ env.LOCATION }}" \
          -var "project_name=${{ env.PROJECT_NAME }}" \
          -var "environment=${{ env.ENVIRONMENT }}" \
          -var "plan_sku=${{ env.PLAN_SKU }}" \
          -var "dotnet_version="9.0"" \
          -out tfplan
        terraform apply -input=false -auto-approve tfplan
        echo "WEBAPP_NAME=$(terraform output -raw webapp_name)" >> $GITHUB_ENV
        echo "WEBAPP_URL=$(terraform output -raw webapp_url)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: [ build, infra ]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: app
        path: app

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        package: app/app.zip

    - name: Display URL
      run: echo "Deployed successfully → ${{ env.WEBAPP_URL }}"
